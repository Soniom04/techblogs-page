{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\Github\\\\techblogs-page\\\\src\\\\context\\\\AppContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport { baseUrl } from \"../baseUrl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\nexport default function AppContextProvider({\n  children\n}) {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [page, setPage] = useState(1);\n  const [posts, setPosts] = useState([]);\n  const [totalPages, setTotalPages] = useState(null);\n  const [tag, setTag] = useState(null);\n  const [category, setCategory] = useState(undefined);\n  async function fetchData(page = 1, tag = null, category = undefined) {\n    setLoading(true);\n    let url = baseUrl;\n    url += `get-blogs?page=${page}`;\n    if (tag) {\n      url += `&tag=${tag}`;\n    } else if (category) {\n      url += `&category=${category}`;\n    }\n    try {\n      console.log(url);\n      const result = await fetch(url);\n      const data = await result.json();\n      console.log(data);\n      setPage(data.page);\n      setPosts(data.posts);\n      setTotalPages(data.totalPages);\n    } catch (error) {\n      alert(error);\n      setPage(1);\n      setPosts([]);\n      setTotalPages(null);\n    }\n    setLoading(false);\n  }\n  useEffect(() => {\n    fetchData(page, tag, category);\n  }, [page, tag, category]);\n  const value = {\n    loading,\n    setLoading,\n    posts,\n    setPosts,\n    page,\n    setPage,\n    totalPages,\n    setTotalPages,\n    fetchData,\n    category,\n    setCategory,\n    tag,\n    setTag\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 12\n  }, this);\n}\n_s(AppContextProvider, \"sBnAUkJVE5gmx6aKqEwYqFuUyC0=\");\n_c = AppContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AppContextProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","baseUrl","jsxDEV","_jsxDEV","AppContext","AppContextProvider","children","_s","loading","setLoading","page","setPage","posts","setPosts","totalPages","setTotalPages","tag","setTag","category","setCategory","undefined","fetchData","url","console","log","result","fetch","data","json","error","alert","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Desktop/Github/techblogs-page/src/context/AppContext.js"],"sourcesContent":["import { createContext, useEffect, useState} from \"react\";\r\nimport { baseUrl } from \"../baseUrl\";\r\n\r\nexport const AppContext = createContext()\r\n\r\nexport default function AppContextProvider({children}){\r\n    const [loading,setLoading] = useState(false)\r\n    const [page,setPage] = useState(1)\r\n    const [posts,setPosts] = useState([])\r\n    const [totalPages,setTotalPages] = useState(null)\r\n    const [tag, setTag] = useState(null);\r\n    const [category, setCategory] = useState(undefined);\r\n    \r\n    async function fetchData(page=1,tag=null,category=undefined){\r\n        setLoading(true)\r\n        let url = baseUrl\r\n        url+=`get-blogs?page=${page}`\r\n        if(tag){\r\n            url+=`&tag=${tag}`\r\n        }\r\n        else if(category){\r\n            url+=`&category=${category}`\r\n        }\r\n        \r\n        try {\r\n            console.log(url)\r\n            const result = await fetch(url)\r\n            const data = await result.json()\r\n            console.log(data)\r\n\r\n            setPage(data.page)\r\n            setPosts(data.posts)\r\n            setTotalPages(data.totalPages)\r\n        } \r\n        catch (error) {\r\n            alert(error)\r\n            setPage(1)\r\n            setPosts([])\r\n            setTotalPages(null)\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchData(page,tag,category)\r\n    },[page,tag,category])\r\n\r\n    const value = {\r\n        loading,\r\n        setLoading,\r\n        posts,\r\n        setPosts,\r\n        page,\r\n        setPage,\r\n        totalPages,\r\n        setTotalPages,\r\n        fetchData,\r\n        category,\r\n        setCategory,\r\n        tag,\r\n        setTag\r\n    }\r\n\r\n    return <AppContext.Provider value={value}>{children}</AppContext.Provider>\r\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzD,SAASC,OAAO,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,OAAO,MAAMC,UAAU,gBAAGN,aAAa,CAAC,CAAC;AAEzC,eAAe,SAASO,kBAAkBA,CAAC;EAACC;AAAQ,CAAC,EAAC;EAAAC,EAAA;EAClD,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC5C,MAAM,CAACU,IAAI,EAACC,OAAO,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAClC,MAAM,CAACY,KAAK,EAACC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACc,UAAU,EAACC,aAAa,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACjD,MAAM,CAACgB,GAAG,EAAEC,MAAM,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAACoB,SAAS,CAAC;EAEnD,eAAeC,SAASA,CAACX,IAAI,GAAC,CAAC,EAACM,GAAG,GAAC,IAAI,EAACE,QAAQ,GAACE,SAAS,EAAC;IACxDX,UAAU,CAAC,IAAI,CAAC;IAChB,IAAIa,GAAG,GAAGrB,OAAO;IACjBqB,GAAG,IAAE,kBAAkBZ,IAAI,EAAE;IAC7B,IAAGM,GAAG,EAAC;MACHM,GAAG,IAAE,QAAQN,GAAG,EAAE;IACtB,CAAC,MACI,IAAGE,QAAQ,EAAC;MACbI,GAAG,IAAE,aAAaJ,QAAQ,EAAE;IAChC;IAEA,IAAI;MACAK,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB,MAAMG,MAAM,GAAG,MAAMC,KAAK,CAACJ,GAAG,CAAC;MAC/B,MAAMK,IAAI,GAAG,MAAMF,MAAM,CAACG,IAAI,CAAC,CAAC;MAChCL,OAAO,CAACC,GAAG,CAACG,IAAI,CAAC;MAEjBhB,OAAO,CAACgB,IAAI,CAACjB,IAAI,CAAC;MAClBG,QAAQ,CAACc,IAAI,CAACf,KAAK,CAAC;MACpBG,aAAa,CAACY,IAAI,CAACb,UAAU,CAAC;IAClC,CAAC,CACD,OAAOe,KAAK,EAAE;MACVC,KAAK,CAACD,KAAK,CAAC;MACZlB,OAAO,CAAC,CAAC,CAAC;MACVE,QAAQ,CAAC,EAAE,CAAC;MACZE,aAAa,CAAC,IAAI,CAAC;IACvB;IACAN,UAAU,CAAC,KAAK,CAAC;EACrB;EAEAV,SAAS,CAAC,MAAI;IACVsB,SAAS,CAACX,IAAI,EAACM,GAAG,EAACE,QAAQ,CAAC;EAChC,CAAC,EAAC,CAACR,IAAI,EAACM,GAAG,EAACE,QAAQ,CAAC,CAAC;EAEtB,MAAMa,KAAK,GAAG;IACVvB,OAAO;IACPC,UAAU;IACVG,KAAK;IACLC,QAAQ;IACRH,IAAI;IACJC,OAAO;IACPG,UAAU;IACVC,aAAa;IACbM,SAAS;IACTH,QAAQ;IACRC,WAAW;IACXH,GAAG;IACHC;EACJ,CAAC;EAED,oBAAOd,OAAA,CAACC,UAAU,CAAC4B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAzB,QAAA,EAAEA;EAAQ;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAsB,CAAC;AAC9E;AAAC7B,EAAA,CA3DuBF,kBAAkB;AAAAgC,EAAA,GAAlBhC,kBAAkB;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}